# Build Docker image
# Publish Artifacts
# Get K8s Files
# Deploy to AKS cluster
# Stage 1
# Download k8s manifestfiles
# Deploy to AKS cluster with Docker image

trigger:
- main

resources:
- repo: self

variables:
  tag: '$(Build.BuildId)'

stages:
- stage: Build
  displayName: Build image
  jobs:
  - job: Build
    displayName: Build
    pool:
      vmImage: ubuntu-latest
    steps:
    - task: Docker@2
      displayName: Build an image
      inputs:
        containerRegistry: 'DockerHub-connection'
        repository: 'jbabi/azure-sbm'
        command: 'buildAndPush'
        Dockerfile: '**/Dockerfile'
        tags: '$(tag)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/springBootMongo2.yaml'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: CopyFiles@2
      inputs:
        SourceFolder: '$(System.DefaultWorkingDirectory)'
        Contents: '**/*.war'
        TargetFolder: '$(Build.ArtifactStagingDirectory)'

    - task: PublishBuildArtifacts@1
      inputs:
        PathtoPublish: '$(Build.ArtifactStagingDirectory)'
        ArtifactName: 'app'
        publishLocation: 'Container'

- stage: Deploy
  displayName: Deploy image
  jobs:
  - job: Deploy
    displayName: Deploy
    pool:
      vmImage: ubuntu-latest
    steps:     
    - task: DownloadPipelineArtifact@2
      inputs:
        buildType: 'current'
        artifactName: 'app'
        itemPattern: '**/*.war'
        targetPath: '$(System.ArtifactsDirectory)'

    - task: KubernetesManifest@0
      inputs:
        action: 'deploy'
        kubernetesServiceConnection: 'Azure-kubernetes-connection'
        namespace: 'default'
        manifests: '$(System.ArtifactsDirectory)/springBootMongo2.yaml'
        containers: 'jbabi/azure-sbm:$(tag)'