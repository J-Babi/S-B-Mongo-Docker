trigger:
- main

pool:
  vmImage: ubuntu-latest

steps:
- script: echo Hello, world!
  displayName: 'Run a one-line script'
  
- task: DownloadSecureFile@1
  name: publickey
  inputs:
    secureFile: 'id_rsa.pub'
- task: charleszipp.azure-pipelines-tasks-terraform.azure-pipelines-tasks-terraform-installer.TerraformInstaller@0
  inputs:
    terraformVersion: 'latest'

- task: AzureCLI@2
  inputs:
    azureSubscription: 'azure-resource-manager-connection'
    scriptType: 'batch'
    scriptLocation: 'inlineScript'
    inlineScript: |
      - task: AzureCLI@2
              displayName: "Terraform"
              inputs:
                azureSubscription:  shared-${{ parameters.environment }}-001
                scriptType: bash
                addSpnToEnvironment: true
                scriptLocation: inlineScript
                inlineScript: |
                  export ARM_CLIENT_ID=$servicePrincipalId
                  export ARM_CLIENT_SECRET=$servicePrincipalKey
                  export ARM_TENANT_ID=$tenantId

- task: TerraformCLI@0
  inputs:
    command: 'init'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'
    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'terrafbackendstorage1'
    backendAzureRmContainerName: 'terrafbackendstorage1container'
    backendAzureRmKey: 'k8s-dev.tfstate'
    allowTelemetryCollection: true

- task: TerraformCLI@0
  inputs:
    command: 'plan'
    workingDirectory: '$(System.DefaultWorkingDirectory)/configuration/iaac/azure/kubernetes'
    commandOptions: '-var client_id=$(client_id) -var client_secret=$(client_secret) -var ssh_public_key=$(publickey.secureFilePath)'

    backendType: 'azurerm'
    backendServiceArm: 'azure-resource-manager-connection'
    ensureBackend: true
    backendAzureRmResourceGroupName: 'terraform-backend-rg'
    backendAzureRmResourceGroupLocation: 'eastus'
    backendAzureRmStorageAccountName: 'terrafbackendstorage1'
    backendAzureRmContainerName: 'terrafbackendstorage1container'
    backendAzureRmKey: 'k8s-dev.tfstate'
    allowTelemetryCollection: true